import { baseEmbed, fmtLine } from '../utils.js';
import { safeWriteJson, DATA_PATH } from '../utils.js';

export async function catlock(client, message, args, data) {
  try {
    const guild = message.guild;
    if (!guild) return;

    // V√©rification des permissions
    const isSysPlus = data['sys+']?.includes(message.author.id);
    const isSys = data.sys?.includes(message.author.id);
    const isOwner = data.owner?.includes(message.author.id);

    if (!isSysPlus && !isSys && !isOwner) {
      const embed = baseEmbed()
        .setTitle('‚ùå Acc√®s refus√©')
        .setDescription('Tu n\'as pas les permissions pour utiliser cette commande.');
      return message.reply({ embeds: [embed] });
    }

    if (args.length === 0) {
      // Afficher la liste des cat√©gories catlock
      if (!data.catlock.categories || data.catlock.categories.length === 0) {
        const embed = baseEmbed()
          .setTitle('üîê Catlock')
          .setDescription('Aucune cat√©gorie n\'est actuellement en catlock.');
        return message.reply({ embeds: [embed] });
      }

      const categoryList = data.catlock.categories.map(catId => {
        const category = guild.channels.cache.get(catId);
        return category ? `‚Ä¢ **${category.name}** (\`${catId}\`)` : `‚Ä¢ Cat√©gorie supprim√©e (\`${catId}\`)`;
      }).join('\n');

      const embed = baseEmbed()
        .setTitle('üîê Cat√©gories Catlock')
        .setDescription(categoryList);
      return message.reply({ embeds: [embed] });
    }

    const action = args[0].toLowerCase();
    
    if (action === 'add' || action === 'ajouter') {
      if (args.length < 2) {
        const embed = baseEmbed()
          .setTitle('‚ùå Erreur')
          .setDescription('Utilisation: `=catlock add <ID_cat√©gorie>`');
        return message.reply({ embeds: [embed] });
      }

      const categoryId = args[1];
      const category = guild.channels.cache.get(categoryId);
      
      if (!category || category.type !== 4) { // 4 = CategoryChannel
        const embed = baseEmbed()
          .setTitle('‚ùå Erreur')
          .setDescription('Cat√©gorie invalide ou introuvable.');
        return message.reply({ embeds: [embed] });
      }

      if (data.catlock.categories.includes(categoryId)) {
        const embed = baseEmbed()
          .setTitle('‚ö†Ô∏è D√©j√† pr√©sent')
          .setDescription(`La cat√©gorie **${category.name}** est d√©j√† en catlock.`);
        return message.reply({ embeds: [embed] });
      }

      data.catlock.categories.push(categoryId);
      safeWriteJson(DATA_PATH, data);

      const embed = baseEmbed()
        .setTitle('‚úÖ Catlock ajout√©')
        .setDescription(`La cat√©gorie **${category.name}** a √©t√© ajout√©e au catlock.`);
      message.reply({ embeds: [embed] });

    } else if (action === 'remove' || action === 'supprimer' || action === 'del') {
      if (args.length < 2) {
        const embed = baseEmbed()
          .setTitle('‚ùå Erreur')
          .setDescription('Utilisation: `=catlock remove <ID_cat√©gorie>`');
        return message.reply({ embeds: [embed] });
      }

      const categoryId = args[1];
      
      if (!data.catlock.categories.includes(categoryId)) {
        const embed = baseEmbed()
          .setTitle('‚ö†Ô∏è Non trouv√©')
          .setDescription('Cette cat√©gorie n\'est pas en catlock.');
        return message.reply({ embeds: [embed] });
      }

      data.catlock.categories = data.catlock.categories.filter(id => id !== categoryId);
      safeWriteJson(DATA_PATH, data);

      const category = guild.channels.cache.get(categoryId);
      const categoryName = category ? category.name : 'Cat√©gorie supprim√©e';

      const embed = baseEmbed()
        .setTitle('‚úÖ Catlock retir√©')
        .setDescription(`La cat√©gorie **${categoryName}** a √©t√© retir√©e du catlock.`);
      message.reply({ embeds: [embed] });

    } else {
      const embed = baseEmbed()
        .setTitle('‚ùå Action invalide')
        .setDescription('Actions disponibles: `add`, `remove`\nUtilise `=catlock` pour voir la liste.');
      message.reply({ embeds: [embed] });
    }

  } catch (error) {
    console.error('Erreur catlock:', error);
    const embed = baseEmbed()
      .setTitle('‚ùå Erreur')
      .setDescription('Une erreur est survenue lors de l\'ex√©cution de la commande.');
    message.reply({ embeds: [embed] });
  }
}